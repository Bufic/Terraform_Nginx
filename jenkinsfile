pipeline {

    parameters {
        booleanParam(name: 'autoApprove', defaultValue: false, description: 'Automatically run apply after generating plan?')
    }

    environment {
        AWS_ACCESS_KEY_ID     = credentials('AWS_ACCESS_KEY_ID')
        AWS_SECRET_ACCESS_KEY = credentials('AWS_SECRET_ACCESS_KEY')
    }

    agent any

    stages {
        stage('checkout') {
            steps {
                script {
                    dir("terraform") {
                        git url: 'https://github.com/Bufic/Terraform_Nginx.git', branch: 'main'
                    }
                }
            }
        }

        stage('Plan') {
            steps {
                sh 'pwd; cd terraform/ ; terraform init'
                sh 'pwd; cd terraform/ ; terraform plan -out tfplan'
                sh 'pwd; cd terraform/ ; terraform show -no-color tfplan > tfplan.txt'
            }
        }

        // stage('Approval') {
        //     when {
        //         not {
        //             equals expected: true, actual: params.autoApprove
        //         }
        //     }

        //     steps {
        //         script {
        //             def plan = readFile 'terraform/Terraform-Jenkins/tfplan.txt'
        //             input message: "Do you want to apply the plan?",
        //             parameters: [text(name: 'Plan', description: 'Please review the plan', defaultValue: plan)]
        //         }
        //     }
        // }

        stage('Apply') {
            steps {
                sh 'pwd; cd terraform/ ; terraform apply -input=false tfplan'
            }
        }

        stage('Destroy Approval') {
            steps {
                script {
                    // Capture user input to set the `confirmDestroy` parameter
                    def userInput = input message: "Do you want to destroy the resources?",
                                           parameters: [booleanParam(name: 'confirmDestroy', description: 'Confirm destroy?', defaultValue: false)]
                    // Set params.confirmDestroy to the input value
                    params.confirmDestroy = userInput.confirmDestroy

                }
            }
        }

        stage('Destroy') {
            // Execute the Destroy stage only if the confirmDestroy parameter is true
            when {
                expression { return params.confirmDestroy == true }
            }
            steps {
                dir('terraform') {
                    sh 'terraform destroy -auto-approve'
                }
            }
        }
    }
}
